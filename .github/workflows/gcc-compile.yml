name: Build LiteCode

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build on ${{ matrix.os }}${{ matrix.arch != '' && format(' ({0})', matrix.arch) || '' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: windows-latest
          - os: macos-latest
            arch: arm64
          - os: macos-latest
            arch: x86_64

    steps:
    - uses: actions/checkout@v3

    - name: Install GCC (Windows)
      if: runner.os == 'Windows'
      uses: egor-tensin/setup-mingw@v2.2.0
      with:
        version: 12.2.0 

    - name: Install GCC (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install gcc

    - name: Build (Unix-like)
      if: runner.os != 'Windows'
      run: |
        if [ "${{ runner.os }}" = "macOS" ]; then
          CFLAGS="-arch ${{ matrix.arch }}" make all
        else
          make all
        fi

    - name: Build (Windows)
      if: runner.os == 'Windows'
      run: |
        gcc -o litecode.exe litecode.c lexer/lexer_interpret.c lexer/lexer_display.c

    - name: Upload artifact (Windows/Linux)
      if: runner.os != 'macOS'
      uses: actions/upload-artifact@v4
      with:
        name: litecode-${{ runner.os }}
        path: |
          litecode*
        if-no-files-found: error

    - name: Upload artifact (macOS)
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v4
      with:
        name: litecode-${{ runner.os }}-${{ matrix.arch }}
        path: |
          litecode
        if-no-files-found: error
